# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
- group: PumaLicense
- name: 'solution'
  value: '**/*.sln'
- name: 'buildPlatform'
  value: 'Any CPU'
- name: 'buildConfiguration'
  value: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: puma-scan-pro-build-task@1
  displayName: 'Puma Scan Professional'
  inputs:
    projectPath: 'PumaPrey.sln'
    settingsFilename: '.pumafile'
    scanResultsFormat: 'html,json,sarif'
    outputFilename: '/PumaResults/pumaprey'
    verboseMode: false

- task: PumaSecurity.PumaScanProfessional-AzureDevOps-Dev.puma-scan-pro-build-task-dev.puma-scan-pro-build-task-dev@1
  displayName: 'Puma Scan Professional - DEV'
  inputs:
    projectPath: 'PumaPrey.sln'
    settingsFilename: '.pumafile'
    scanResultsFormat: 'html,json,sarif'
    outputFilename: '/PumaResults/pumaprey-dev'
    verboseMode: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: PumaScan SARIF to CodeAnalysisLogs'
  inputs:
    PathtoPublish: '/PumaResults/pumaprey.sarif'
    ArtifactName: CodeAnalysisLogs

- task: dependency-check-build-task@5
  displayName: 'Dependency Check Analysis'
  inputs:
    projectName: '$(repositoryname)'
    scanPath: '$(Build.StagingDirectory)/**/*.csproj'
    format: 'SARIF'
    reportsDirectory: '$(Build.StagingDirectory)/depcheck'
    enableExperimental: true
    additionalArguments: '--scan "$(Build.SourcesDirectory)\**\packages.config"'
    dependencyCheckVersion: '6.1.2'
    enableVerbose: false

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: Dependency Check SARIF to CodeAnalysisLogs'
  inputs:
    PathtoPublish: '$(Build.StagingDirectory)/depcheck/dependency-check-report.sarif'
    ArtifactName: CodeAnalysisLogs

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

